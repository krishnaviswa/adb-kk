AWSTemplateFormatVersion: '2010-09-09'
Description:  >
  Stack for PySparkon EMR Demo. Deploys a VPC with one public subnet and an internet gateway
  with a default route on the public subnet. Deploys a Glue database, crawlers,
  and series of S3 buckets, to form a data lake, and an EMR cluster.
Parameters:
  ProjectName:
    Description: Project name that is prefixed to resource names
    Type: String
    Default: adb  
  VpcCIDR:
    Description: The IP range (CIDR notation) for this VPC
    Type: String
    Default: 172.31.0.0/16
  PublicSubnetCIDR:
    Description: The IP range (CIDR notation) for the public subnet
    Type: String
    Default: 172.31.0.0/20
  TerminationProtected:
    Description: Set auto-termination on or off
    Type: String
    Default: False
  Ec2KeyName:
    Description: EMR Master node SSH Keypair name
    Type: String
    Default: adb-key-pair
  MasterInstanceCount:
    Description: Number of Master nodes
    Type: Number
    Default: 1
  MasterInstanceType:
    Description: EC2 instance type for Master nodes
    Type: String
    Default: m5.xlarge
  CoreInstanceCount:
    Description: Number of Core nodes
    Type: Number
    Default: 2
  CoreInstanceType:
    Description: EC2 instance type for Core nodes
    Type: String
    Default: m5.xlarge
  ReleaseLabel:
    Description: Version of EMR to deploy to cluster
    Type: String
    Default: emr-6.2.0
  EbsRootVolumeSize:
    Description: Size in GBs of EBS root volume
    Type: String
    Default: 10
  BootstrapBucket:
    Description: S3 bucket where EMR bootstrap script is located
    Type: String
    Default: "adb-061553549694-cicd"
Resources:
  RawBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['-', ['adb-cfn', 'raw', !Ref 'AWS::AccountId', !Ref 'AWS::Region']]
      VersioningConfiguration:
        Status: Enabled
      AccelerateConfiguration:
        AccelerationStatus: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              "SSEAlgorithm": "AES256"
      Tags:
        - Key: project
          Value: !Ref ProjectName
  ProcessedBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['-', ['adb-cfn', 'processed', !Ref 'AWS::AccountId', !Ref 'AWS::Region']]
      VersioningConfiguration:
        Status: Enabled
      AccelerateConfiguration:
        AccelerationStatus: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              "SSEAlgorithm": "AES256"
      Tags:
        - Key: project
          Value: !Ref ProjectName
  CuratedBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['-', ['adb-cfn', 'curated', !Ref 'AWS::AccountId', !Ref 'AWS::Region']]
      VersioningConfiguration:
        Status: Enabled
      AccelerateConfiguration:
        AccelerationStatus: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              "SSEAlgorithm": "AES256"
      Tags:
        - Key: project
          Value: !Ref ProjectName
  ScriptBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['-', ['adb-cfn', 'script', !Ref 'AWS::AccountId', !Ref 'AWS::Region']]
      VersioningConfiguration:
        Status: Enabled
      AccelerateConfiguration:
        AccelerationStatus: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              "SSEAlgorithm": "AES256"
      Tags:
        - Key: project
          Value: !Ref ProjectName
  LogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['-', ['adb-cfn', 'logs', !Ref 'AWS::AccountId', !Ref 'AWS::Region']]
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              "SSEAlgorithm": "AES256"
      Tags:
        - Key: project
          Value: !Ref ProjectName
  GlueDatabaseBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['-', ['adb-cfn', 'glue-db', !Ref 'AWS::AccountId', !Ref 'AWS::Region']]
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              "SSEAlgorithm": "AES256"
      Tags:
        - Key: project
          Value: !Ref ProjectName
  AirflowBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join ['-', ['adb-cfn-airflow', !Ref 'AWS::AccountId', !Ref 'AWS::Region']]
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              "SSEAlgorithm": "AES256"
      Tags:
        - Key: project
          Value: !Ref ProjectName
  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Description: 'EMR Glue Data Catalog'
        Name: 'hit_cfn'
        LocationUri: !Ref GlueDatabaseBucket
  CrawlerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EmrDemoCrawlerRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - glue.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      Policies:
        - PolicyName: DemoCrawlerPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                Resource: '*'
  RawCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: 'adb-cfn-raw'
      Role: !GetAtt 'CrawlerRole.Arn'
      DatabaseName: !Ref GlueDatabase
      Targets:
        S3Targets:
          - Path: !Ref RawBucket
      SchemaChangePolicy:
        UpdateBehavior: 'UPDATE_IN_DATABASE'
        DeleteBehavior: 'LOG'
      TablePrefix: 'raw_'
      Configuration: "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}"
    DependsOn:
      - CrawlerRole
      - GlueDatabase
      - RawBucket
  ProcessedCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: 'adb-cfn-processed'
      Role: !GetAtt 'CrawlerRole.Arn'
      DatabaseName: !Ref GlueDatabase
      Targets:
        S3Targets:
          - Path: !Ref ProcessedBucket
      SchemaChangePolicy:
        UpdateBehavior: 'UPDATE_IN_DATABASE'
        DeleteBehavior: 'LOG'
      TablePrefix: 'processed_'
      Configuration: "{\"Version\":1.0,\"CrawlerOutput\":{\"Partitions\":{\"AddOrUpdateBehavior\":\"InheritFromTable\"},\"Tables\":{\"AddOrUpdateBehavior\":\"MergeNewColumns\"}}}"
    DependsOn:
      - CrawlerRole
      - GlueDatabase
      - ProcessedBucket
#  Cluster:
#    Type: AWS::EMR::Cluster
#    Properties:
#      Applications:
#        - Name: 'Hadoop'
#        - Name: 'Spark'
#        - Name: 'Zeppelin'
#      Configurations:
#        - Classification: spark-hive-site
#          ConfigurationProperties:
#            hive.metastore.client.factory.class: 'com.amazonaws.glue.catalog.metastore.AWSGlueDataCatalogHiveClientFactory'
#      EbsRootVolumeSize: !Ref EbsRootVolumeSize
#      Instances:
#        Ec2KeyName: !Ref Ec2KeyName
#        MasterInstanceGroup:
#          InstanceCount: !Ref MasterInstanceCount
#          InstanceType: !Ref MasterInstanceType
#          Market: ON_DEMAND
#          Name: MASTER
#        CoreInstanceGroup:
#          InstanceCount: !Ref CoreInstanceCount
#          InstanceType: !Ref CoreInstanceType
#          Market: ON_DEMAND
#          Name: CORE
#        TerminationProtected: !Ref TerminationProtected
#      Name: 'demo-cluster-cloudformation'
#      JobFlowRole: !Ref EmrEc2InstanceProfile
#      ServiceRole: !Ref EmrRole
#      ReleaseLabel: !Ref ReleaseLabel
#      StepConcurrencyLevel: 2
#      VisibleToAllUsers: true
#      LogUri: !Sub s3://${LogsBucket}/
#      Tags:
#        - Key: project
#          Value: !Sub ${ProjectName} Cluster
#    DependsOn:
#      - LogsBucket
#  EmrRole:
#    Type: AWS::IAM::Role
#    Properties:
#      RoleName: 'EMR_DemoRole'
#      AssumeRolePolicyDocument:
#        Version: 2008-10-17
#        Statement:
#          - Sid: ''
#            Effect: Allow
#            Principal:
#              Service: elasticmapreduce.amazonaws.com
#            Action: 'sts:AssumeRole'
#      Path: /
#      ManagedPolicyArns:
#        - 'arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceRole'
#  EmrEc2Role:
#    Type: AWS::IAM::Role
#    Properties:
#      RoleName: 'EMR_EC2_DemoRole'
#      AssumeRolePolicyDocument:
#        Version: 2008-10-17
#        Statement:
#          - Sid: ''
#            Effect: Allow
#            Principal:
#              Service: ec2.amazonaws.com
#            Action: 'sts:AssumeRole'
#      Path: /
#      ManagedPolicyArns:
#        - 'arn:aws:iam::aws:policy/service-role/AmazonElasticMapReduceforEC2Role'
#      Policies:
#        - PolicyName: 'EmrEc2RoleSsmParams'
#          PolicyDocument:
#            Version: '2012-10-17'
#            Statement:
#              - Effect: Allow
#                Action: 'ssm:*'
#                Resource: !Join [':', ['arn:aws:ssm', !Ref 'AWS::Region', !Ref 'AWS::AccountId', 'parameter/']]
#  EmrEc2InstanceProfile:
#    Type: AWS::IAM::InstanceProfile
#    Properties:
#      InstanceProfileName: 'EMR_EC2_DemoRole'
#      Path: /
#      Roles:
#        - !Ref EmrEc2Role
#  Environment:
#    Properties:
#      AirflowConfigurationOptions:
#        core.default_timezone: utc
#        logging.logging_level: INFO
#      DagS3Path: dags
#      EnvironmentClass: mw1.small
#      ExecutionRoleArn: !GetAtt AirflowMWAAExecutionRole.Arn
#      LoggingConfiguration:
#        DagProcessingLogs:
#          Enabled: true
#          LogLevel: INFO
#        SchedulerLogs:
#          Enabled: false
#          LogLevel: INFO
#        TaskLogs:
#          Enabled: true
#          LogLevel: INFO
#        WebserverLogs:
#          Enabled: false
#          LogLevel: INFO
#        WorkerLogs:
#          Enabled: false
#          LogLevel: INFO
#      MaxWorkers: 1
#      Name: my-airflow-environment-1
#      NetworkConfiguration:
#        SecurityGroupIds:
#          - sg-0f5db09f08ee6662e
#        SubnetIds:
#          - subnet-0b9f6daa7582bf31e
#          - subnet-050b4cf093fbe3b34
#      SourceBucketArn: "arn:aws:s3:::adb-cfn-airflow-061553549694-us-east-1"
#      Tags:
#        Environment: Staging
#        Team: ADBProject
#    Type: "AWS::MWAA::Environment"
#
#    AirflowMWAAExecutionRole:
#      Type: AWS::IAM::Role
#      Properties:
#        AssumeRolePolicyDocument:
#          Version: 2020-10-17
#          Statement:
#            - Effect: Allow
#              Principal:
#                Service:
#                  - airflow-env.amazonaws.com
#                  - airflow.amazonaws.com
#              Action:
#                - "sts:AssumeRole"
#        Path: "/service-role/"
#
#    AirflowExecutionPolicy:
#      Type: AWS::IAM::ManagedPolicy
#      Properties:
#        Roles:
#          - !Ref AirflowMWAAExecutionRole
#        PolicyDocument:
#          Version: '2012-10-17'
#          Statement:
#            - Effect: Allow
#              Action:
#                - airflow:PublishMetrics
#                - airflow:GetEnvironment
#                - airflow:CreateCliToken
#                - airflow:CreateEnvironment
#                - airflow:DeleteEnvironment
#                - airflow:ListEnvironments
#                - airflow:UpdateEnvironment
#              Resource: arn:aws:airflow:us-east-1:061553549694:environment/*
#            - Effect: Deny
#              Action: s3:ListAllMyBuckets
#              Resource:
#                - arn:aws:s3:::adb-061553549694-dag
#                - arn:aws:s3:::adb-061553549694-dag/*
#            - Effect: Allow
#              Action:
#                - s3:GetObject*
#                - s3:GetBucket*
#                - s3:List*
#              Resource:
#                - arn:aws:s3:::adb-061553549694-dag
#                - arn:aws:s3:::adb-061553549694-dag/*
#            - Effect: Allow
#              Action:
#                - logs:CreateLogStream
#                - logs:CreateLogGroup
#                - logs:PutLogEvents
#                - logs:GetLogEvents
#                - logs:GetLogRecord
#                - logs:GetLogGroupFields
#                - logs:GetQueryResults
#              Resource:
#                - arn:aws:logs:us-east-1:061553549694:log-group:airflow-MyAirflowEnvironment-*
#            - Effect: Allow
#              Action:
#                - logs:DescribeLogGroups
#              Resource:
#                - "*"
#            - Effect: Allow
#              Action: cloudwatch:PutMetricData
#              Resource: "*"
#            - Effect: Allow
#              Action:
#                - sqs:ChangeMessageVisibility
#                - sqs:DeleteMessage
#                - sqs:GetQueueAttributes
#                - sqs:GetQueueUrl
#                - sqs:ReceiveMessage
#                - sqs:SendMessage
#              Resource: arn:aws:sqs:us-east-1:*:airflow-celery-*
#            - Effect: Allow
#              Action:
#                - kms:Decrypt
#                - kms:DescribeKey
#                - kms:GenerateDataKey*
#                - kms:Encrypt
#              NotResource: arn:aws:kms:*:061553549694:key/*
#              Condition:
#                StringLike:
#                  kms:ViaService:
#                    - sqs.us-east-1.amazonaws.com
